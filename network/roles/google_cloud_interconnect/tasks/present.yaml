---
- set_fact:
    id: "{{ fabric | default('default') | hash('sha1') }}"

- name: create pureport_region_map fact
  set_fact:
    pureport_region_map:
      us-west1: "/locations/us-sea"
      us-west2: "/locations/us-sjc"
      us-east1: "/locations/us-wdc"
      us-east4: "/locations/us-wdc"
      us-central1: "/locations/us-chi"

- assert:
    that:
      - gcp_region is defined
      - gcp_region in pureport_region_map.keys()
    fail_msg: "missing or invalid google cloud region"
    quiet: yes

- assert:
    that:
      - pureport_connection_speed is defined
      - pureport_connection_speed | int in [50, 100, 200, 300, 400, 500, 1000, 5000, 10000]
    fail_msg: "missing or invalid value for `pureport_connection_speed`"
    quiet: yes

- block:
    - assert:
        that:
          - gcp_network is defined
          - "'selfLink' in gcp_network"
        fail_msg: "missing required value for gcp_network"
        quiet: yes

    - set_fact:
        gcp_network_link: "{{ gcp_network.selfLink }}"
  when: gcp_network_link is undefined

- name: create google cloud router
  google.cloud.gcp_compute_router:
    name: "router-{{ id[0:6] }}-{{ item }}"
    project: "{{ lookup('env', 'GCP_PROJECT') }}"
    region: "{{ gcp_region }}"
    network: { selfLink: "{{ gcp_network_link }}" }
    bgp:
      asn: 16550  # Must be 16550
  with_sequence: start=1 count=2
  register: gcp_routers

- name: create google cloud interconnect attachments
  google.cloud.gcp_compute_interconnect_attachment:
    name: "vlan-{{ id[0:6] }}-{{ index + 1 }}"
    project: "{{ lookup('env', 'GCP_PROJECT') }}"
    region: "{{ gcp_region }}"
    router: { selfLink: "{{ item.selfLink }}" }
    type: PARTNER
    admin_enabled: true
    edge_availability_domain: "AVAILABILITY_DOMAIN_{{ index + 1 }}"
  loop: "{{ gcp_routers.results }}"
  loop_control:
    index_var: index
  register: gcp_attachments

- name: create pureport network
  pureport.fabric.network:
    name: "network-{{ id[0:6] }}"
    description: "{{ pureport_network_description | default(omit) }}"
    account_href: "/accounts/{{ lookup('env', 'PUREPORT_ACCOUNT_ID') }}"
  register: pureport_network

- set_fact:
    connection_id: "{{ gcp_attachments.results.0.id | hash('sha1') }}"

- name: create connection from google cloud to pureport
  pureport.fabric.google_cloud_interconnect_connection:
    name: "conn-{{ connection_id[0:6] }}"
    network_href: "{{ pureport_network.href }}"
    location_href: "{{ pureport_region_map[region] }}"
    speed: "{{ pureport_connection_speed }}"
    high_availability: true
    billing_term: HOURLY
    primary_pairing_key: "{{ gcp_attachments.results.0.pairingKey }}"
    secondary_pairing_key: "{{ gcp_attachments.results.1.pairingKey }}"
    wait_for_server: "{{ pureport_connection_wait_for_server | default(omit) }}"
  register: pureport_connection
